{"types":"export type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | { [key: string]: Json | undefined }\n  | Json[]\n\nexport type Database = {\n  // Allows to automatically instantiate createClient with right options\n  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)\n  __InternalSupabase: {\n    PostgrestVersion: \"13.0.4\"\n  }\n  public: {\n    Tables: {\n      device_categories: {\n        Row: {\n          color_code: string | null\n          created_at: string | null\n          description: string | null\n          icon_name: string | null\n          id: number\n          name: string\n          updated_at: string | null\n        }\n        Insert: {\n          color_code?: string | null\n          created_at?: string | null\n          description?: string | null\n          icon_name?: string | null\n          id?: number\n          name: string\n          updated_at?: string | null\n        }\n        Update: {\n          color_code?: string | null\n          created_at?: string | null\n          description?: string | null\n          icon_name?: string | null\n          id?: number\n          name?: string\n          updated_at?: string | null\n        }\n        Relationships: []\n      }\n      device_placements: {\n        Row: {\n          coverage_area: Json | null\n          created_at: string | null\n          device_name: string\n          device_spec_id: number | null\n          id: string\n          installation_notes: string | null\n          mounting_height: number | null\n          placement_reason: string | null\n          position_x: number | null\n          position_y: number | null\n          priority: string | null\n          project_id: string | null\n          quantity: number\n          room_name: string | null\n          wiring_requirements: Json | null\n        }\n        Insert: {\n          coverage_area?: Json | null\n          created_at?: string | null\n          device_name: string\n          device_spec_id?: number | null\n          id?: string\n          installation_notes?: string | null\n          mounting_height?: number | null\n          placement_reason?: string | null\n          position_x?: number | null\n          position_y?: number | null\n          priority?: string | null\n          project_id?: string | null\n          quantity?: number\n          room_name?: string | null\n          wiring_requirements?: Json | null\n        }\n        Update: {\n          coverage_area?: Json | null\n          created_at?: string | null\n          device_name?: string\n          device_spec_id?: number | null\n          id?: string\n          installation_notes?: string | null\n          mounting_height?: number | null\n          placement_reason?: string | null\n          position_x?: number | null\n          position_y?: number | null\n          priority?: string | null\n          project_id?: string | null\n          quantity?: number\n          room_name?: string | null\n          wiring_requirements?: Json | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"device_placements_device_spec_id_fkey\"\n            columns: [\"device_spec_id\"]\n            isOneToOne: false\n            referencedRelation: \"device_specifications\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"device_placements_project_id_fkey\"\n            columns: [\"project_id\"]\n            isOneToOne: false\n            referencedRelation: \"projects\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      device_specifications: {\n        Row: {\n          category_id: number\n          coverage_area_sqft: number | null\n          coverage_radius_feet: number | null\n          created_at: string | null\n          description: string | null\n          detection_range_feet: number | null\n          device_name: string\n          environmental_requirements: string | null\n          field_of_view_degrees: number | null\n          id: number\n          installation_constraints: string | null\n          interference_frequency_ghz: number | null\n          mounting_height_max_feet: number | null\n          mounting_height_min_feet: number | null\n          mounting_height_optimal_feet: number | null\n          placement_rules: Json | null\n          power_consumption_watts: number | null\n          technical_specs: Json | null\n          updated_at: string | null\n          voltage_requirements: string | null\n        }\n        Insert: {\n          category_id: number\n          coverage_area_sqft?: number | null\n          coverage_radius_feet?: number | null\n          created_at?: string | null\n          description?: string | null\n          detection_range_feet?: number | null\n          device_name: string\n          environmental_requirements?: string | null\n          field_of_view_degrees?: number | null\n          id?: number\n          installation_constraints?: string | null\n          interference_frequency_ghz?: number | null\n          mounting_height_max_feet?: number | null\n          mounting_height_min_feet?: number | null\n          mounting_height_optimal_feet?: number | null\n          placement_rules?: Json | null\n          power_consumption_watts?: number | null\n          technical_specs?: Json | null\n          updated_at?: string | null\n          voltage_requirements?: string | null\n        }\n        Update: {\n          category_id?: number\n          coverage_area_sqft?: number | null\n          coverage_radius_feet?: number | null\n          created_at?: string | null\n          description?: string | null\n          detection_range_feet?: number | null\n          device_name?: string\n          environmental_requirements?: string | null\n          field_of_view_degrees?: number | null\n          id?: number\n          installation_constraints?: string | null\n          interference_frequency_ghz?: number | null\n          mounting_height_max_feet?: number | null\n          mounting_height_min_feet?: number | null\n          mounting_height_optimal_feet?: number | null\n          placement_rules?: Json | null\n          power_consumption_watts?: number | null\n          technical_specs?: Json | null\n          updated_at?: string | null\n          voltage_requirements?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"device_specifications_category_id_fkey\"\n            columns: [\"category_id\"]\n            isOneToOne: false\n            referencedRelation: \"device_categories\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      equipment_racks: {\n        Row: {\n          created_at: string | null\n          equipment_list: Json | null\n          id: string\n          installation_specs: Json | null\n          position_x: number | null\n          position_y: number | null\n          power_requirements: number | null\n          project_id: string | null\n          rack_name: string\n          rack_type: string\n          rack_units: number | null\n          wiring_diagram: Json | null\n        }\n        Insert: {\n          created_at?: string | null\n          equipment_list?: Json | null\n          id?: string\n          installation_specs?: Json | null\n          position_x?: number | null\n          position_y?: number | null\n          power_requirements?: number | null\n          project_id?: string | null\n          rack_name: string\n          rack_type: string\n          rack_units?: number | null\n          wiring_diagram?: Json | null\n        }\n        Update: {\n          created_at?: string | null\n          equipment_list?: Json | null\n          id?: string\n          installation_specs?: Json | null\n          position_x?: number | null\n          position_y?: number | null\n          power_requirements?: number | null\n          project_id?: string | null\n          rack_name?: string\n          rack_type?: string\n          rack_units?: number | null\n          wiring_diagram?: Json | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"equipment_racks_project_id_fkey\"\n            columns: [\"project_id\"]\n            isOneToOne: false\n            referencedRelation: \"projects\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      profiles: {\n        Row: {\n          company_name: string | null\n          created_at: string | null\n          email: string\n          full_name: string | null\n          id: string\n          phone: string | null\n          subscription_tier: string | null\n          updated_at: string | null\n          user_role: string | null\n        }\n        Insert: {\n          company_name?: string | null\n          created_at?: string | null\n          email: string\n          full_name?: string | null\n          id: string\n          phone?: string | null\n          subscription_tier?: string | null\n          updated_at?: string | null\n          user_role?: string | null\n        }\n        Update: {\n          company_name?: string | null\n          created_at?: string | null\n          email?: string\n          full_name?: string | null\n          id?: string\n          phone?: string | null\n          subscription_tier?: string | null\n          updated_at?: string | null\n          user_role?: string | null\n        }\n        Relationships: []\n      }\n      projects: {\n        Row: {\n          automation_tier: string\n          created_at: string | null\n          description: string | null\n          device_configuration: Json | null\n          estimated_cost: number | null\n          floor_plan_analysis: Json | null\n          floor_plan_url: string | null\n          id: string\n          project_name: string\n          project_status: string | null\n          tier_details: Json | null\n          total_devices: number | null\n          updated_at: string | null\n          user_id: string | null\n          user_preferences: Json | null\n        }\n        Insert: {\n          automation_tier: string\n          created_at?: string | null\n          description?: string | null\n          device_configuration?: Json | null\n          estimated_cost?: number | null\n          floor_plan_analysis?: Json | null\n          floor_plan_url?: string | null\n          id?: string\n          project_name: string\n          project_status?: string | null\n          tier_details?: Json | null\n          total_devices?: number | null\n          updated_at?: string | null\n          user_id?: string | null\n          user_preferences?: Json | null\n        }\n        Update: {\n          automation_tier?: string\n          created_at?: string | null\n          description?: string | null\n          device_configuration?: Json | null\n          estimated_cost?: number | null\n          floor_plan_analysis?: Json | null\n          floor_plan_url?: string | null\n          id?: string\n          project_name?: string\n          project_status?: string | null\n          tier_details?: Json | null\n          total_devices?: number | null\n          updated_at?: string | null\n          user_id?: string | null\n          user_preferences?: Json | null\n        }\n        Relationships: []\n      }\n    }\n    Views: {\n      [_ in never]: never\n    }\n    Functions: {\n      [_ in never]: never\n    }\n    Enums: {\n      [_ in never]: never\n    }\n    CompositeTypes: {\n      [_ in never]: never\n    }\n  }\n}\n\ntype DatabaseWithoutInternals = Omit<Database, \"__InternalSupabase\">\n\ntype DefaultSchema = DatabaseWithoutInternals[Extract<keyof Database, \"public\">]\n\nexport type Tables<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof (DefaultSchema[\"Tables\"] & DefaultSchema[\"Views\"])\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])[TableName] extends {\n      Row: infer R\n    }\n    ? R\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])\n    ? (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])[DefaultSchemaTableNameOrOptions] extends {\n        Row: infer R\n      }\n      ? R\n      : never\n    : never\n\nexport type TablesInsert<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Insert: infer I\n    }\n    ? I\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Insert: infer I\n      }\n      ? I\n      : never\n    : never\n\nexport type TablesUpdate<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Update: infer U\n    }\n    ? U\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Update: infer U\n      }\n      ? U\n      : never\n    : never\n\nexport type Enums<\n  DefaultSchemaEnumNameOrOptions extends\n    | keyof DefaultSchema[\"Enums\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  EnumName extends DefaultSchemaEnumNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"]\n    : never = never,\n> = DefaultSchemaEnumNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"][EnumName]\n  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema[\"Enums\"]\n    ? DefaultSchema[\"Enums\"][DefaultSchemaEnumNameOrOptions]\n    : never\n\nexport type CompositeTypes<\n  PublicCompositeTypeNameOrOptions extends\n    | keyof DefaultSchema[\"CompositeTypes\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"]\n    : never = never,\n> = PublicCompositeTypeNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"][CompositeTypeName]\n  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema[\"CompositeTypes\"]\n    ? DefaultSchema[\"CompositeTypes\"][PublicCompositeTypeNameOrOptions]\n    : never\n\nexport const Constants = {\n  public: {\n    Enums: {},\n  },\n} as const\n"}